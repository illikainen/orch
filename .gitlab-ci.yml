---
image: debian:12

workflow:
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /(skip-ci|skip-gitlab)/i'
      when: never
    - when: always

variables:
  GIT_DEPTH: 0
  LC_ALL: "C"
  TZ: "UTC"

stages:
  - build

before_script:
  # Prepare packages
  - apt-get update
  - apt-get -y dist-upgrade
  - apt-get -y install ca-certificates git golang make
  # Configure signing key
  - echo 'dev-personal-git@iodine ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOaK5/rx1e5OSInMYOwoLeGyIwi7Hpao0qUC4oyO0/Wr' >"${HOME}/.signers"
  # Verify repo and checkout the correct ref
  - git -c gpg.ssh.allowedSignersFile="${HOME}/.signers" verify-commit HEAD
  - git checkout -B "$CI_COMMIT_REF_NAME"
  - git -c gpg.ssh.allowedSignersFile="${HOME}/.signers" verify-commit HEAD

build-job:
  stage: build
  script:
    # Prepare dependencies
    - go mod tidy
    - go mod verify
    - git diff go.mod go.sum
    - sha256sum --strict --check go.pin
    - go env -w GOPROXY="off" CGO_ENABLED="0"
    # Regular build
    - go generate ./...
    - go build -mod=readonly -trimpath -o "build/${CI_PROJECT_NAME}"
    # Release build
    - GOFER_RELEASE=true go generate ./...
    - GOOS=linux GOARCH=amd64 go build -o "build/release/${CI_PROJECT_NAME}-linux-amd64"
        -mod=readonly -trimpath -buildmode=pie -ldflags="-s -w -buildid="
    - GOOS=linux GOARCH=arm64 go build -o "build/release/${CI_PROJECT_NAME}-linux-arm64"
        -mod=readonly -trimpath -buildmode=pie -ldflags="-s -w -buildid="
    - GOOS=darwin GOARCH=arm64 go build -o "build/release/${CI_PROJECT_NAME}-darwin-arm64"
        -mod=readonly -trimpath -buildmode=pie -ldflags="-s -w -buildid="
    - GOOS=windows GOARCH=amd64 go build -o "build/release/${CI_PROJECT_NAME}-windows-amd64"
        -mod=readonly -trimpath -buildmode=pie -ldflags="-s -w -buildid="
    # Checksums
    - find build ! -type d ! -name SHA256SUMS -exec sha256sum --tag '{}' \; >build/SHA256SUMS
    - cat build/SHA256SUMS |sort
  artifacts:
    paths:
      - ./build
    expire_in: 1 week
